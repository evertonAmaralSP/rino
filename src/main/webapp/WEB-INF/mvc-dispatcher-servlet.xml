<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
		http://www.springframework.org/schema/rabbit 
		http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

	<context:component-scan base-package="br.com.abril.rino.controller" />

	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<!-- Default bean name is 'mongo' -->
	<mongo:mongo host="localhost" port="27017" />

	<bean id="mongoTemplate" class="org.springframework.data.document.mongodb.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="hiporino" />
		<constructor-arg name="defaultCollectionName" value="rinoCollection" />
	</bean>

	<!-- To translate any MongoExceptions thrown in @Repository annotated classes -->
	<context:annotation-config />
	
	<!-- A reference to the org.springframework.amqp.rabbit.connection.ConnectionFactory -->
    <rabbit:connection-factory id="connectionFactory"/>
 
    <!-- Creates a org.springframework.amqp.rabbit.core.RabbitTemplate for access to the broker -->
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory"/>
 
    <!-- Creates a org.springframework.amqp.rabbit.core.RabbitAdmin    to manage exchanges, queues and bindings -->
    <rabbit:admin connection-factory="connectionFactory"/>
 
    <!-- Creates a queue for consumers to retrieve messages -->
    <rabbit:queue name="hipo.queue" durable="true"/>
	
	
</beans>



